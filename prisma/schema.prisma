generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       Int    @id @default(autoincrement())
  username String @unique
}

enum Gender {
  Male
  Female
}

enum Month {
  April
  May
  June
  July
  August
  September
  October
  November
  December
  January
  February
  March
}

model Student {
  studentId     Int          @id @default(autoincrement()) // registration number
  username      String       @unique
  firstname     String
  lastname      String
  motherName    String
  fatherName    String
  gender        Gender
  contactNo     String
  dob           String
  address       String
  feesPaidUpto  Month
  admissionYear Int
  passedOutYear Int?
  classId       ClassList
  class         Class        @relation(fields: [classId], references: [id])
  attendance    Attendance[]
  result        Result[]
}

enum Group {
  Rose
  Marigold
  Lily
  Sunflower
}

enum ClassList {
  class_4
  class_5
  class_6
  class_7
  class_8
  class_9
  class_10
  class_11
  class_12
}

model Class {
  id            ClassList @id
  group         Group
  totalStudents Student[]
  subjects      Subject[]
  events        Event[]
  teachers      Teacher[] @relation("TeacherClasses")
  exams         Exam[]
  fees          Fee[]
}

model Teacher {
  id             Int       @id @default(autoincrement())
  username       String    @unique
  firstname      String
  lastname       String
  qualification  String
  joiningDate    Int
  joiningMonth   Month
  joiningYear    Int
  gender         Gender
  servedTill     Month?
  servedPresent  Boolean?  @default(true)
  lastSalaryPaid Month
  contactNo      String
  address        String
  salary         Int
  subject        Subject[]
  classes        Class[]   @relation("TeacherClasses")
}

model Subject {
  id              Int       @id @default(autoincrement())
  subjectName     String
  teacherUsername String
  teacher         Teacher   @relation(fields: [teacherUsername], references: [username])
  classId         ClassList
  class           Class     @relation(fields: [classId], references: [id])
  exams           Exam[]

  @@unique([subjectName, classId])
}

enum MonthsOfExam {
  May
  September
  December
  March
}

model Exam {
  id Int @id @default(autoincrement())

  classId ClassList
  class   Class     @relation(fields: [classId], references: [id])

  subjectname String
  subject     Subject @relation(fields: [subjectname, classId], references: [subjectName, classId])

  monthname MonthsOfExam
  examMonth ExamMonth    @relation(fields: [monthname], references: [name])

  results Result[]
  date    Int
}

model ExamMonth {
  id      Int          @id @default(autoincrement())
  name    MonthsOfExam @unique
  exams   Exam[]
  results Result[]
}

model Result {
  id          Int           @id @default(autoincrement())
  score       Int?
  stuId       Int?
  student     Student?      @relation(fields: [stuId], references: [studentId])
  examMonthId MonthsOfExam?
  ExamMonth   ExamMonth?    @relation(fields: [examMonthId], references: [name])
  examId      Int
  exam        Exam          @relation(fields: [examId], references: [id])
}

enum EventType {
  Specific
  General
}

model Event {
  id          Int        @id @default(autoincrement())
  typeOfEvent EventType
  eventName   String
  startDate   DateTime
  endDate     DateTime
  description String
  classId     ClassList?
  class       Class?     @relation(fields: [classId], references: [id])
}

model Attendance {
  id                  Int      @id @default(autoincrement())
  present             Boolean
  date                DateTime
  studentAttendanceId Int
  student             Student  @relation(fields: [studentAttendanceId], references: [studentId])
}

model Fee {
  id      Int       @id @default(autoincrement())
  amount  Int
  classId ClassList
  class   Class     @relation(fields: [classId], references: [id])
}

model Expense {
  id          Int    @id @default(autoincrement())
  monthName   Month
  date        Int
  amount      Int
  year        Int
  description String
  title       String
}

model Gain {
  id          Int    @id @default(autoincrement())
  monthName   Month
  date        Int
  year        Int
  amount      Int
  description String
  title       String
}
